@page "/postDetails/{PostId}"
@inject IPostService postService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
<!-- ======= Blog Section ======= -->
<section id="blog" class="blog space100">
    <div class="container" style="margin-left:5%; max-width:100%;">

        <div class="row">

            <div class="col-lg-8 entries" style="flex:0 0 100%; max-width:100%;">

                <article class="entry entry-single">
                    <!--
                                <div class="entry-img">
                                    <img src="/img/blog-1.jpg" alt="" class="img-fluid">
                                </div>
                -->
                    <h2 class="entry-title">
                        <a href="#">@postEntity.Title</a>
                    </h2>

                    <div class="entry-meta">
                        <ul>
                            <li class="d-flex align-items-center"><i class="icofont-user"></i> <a href="#">@postEntity.Username</a></li>
                            <li class="d-flex align-items-center"><i class="icofont-wall-clock"></i> <a href="#"><time datetime="2020-01-01">@postEntity.CreatedOn</time></a></li>
                            <li class="d-flex align-items-center"><i class="icofont-comment"></i> <a href="#">12</a></li>
                        </ul>
                    </div>
                    <div class="entry-content">
                        @postEntity.Description
                    </div>

                </article>
            </div>
        </div>
        <div class="blog-comments">
            @if (commentModel == null || commentModel.Count == 0)
            {
                <p>There are no comments for this post</p>
            }
            else
            {


                <h4 class="comments-count">@commentModel.Count Comments</h4>

                @foreach (var tka in commentModel)
                {

                    <div id="comment-1" class="comment clearfix">
                        <img src="assets/img/comments-1.jpg" class="comment-img  float-left" alt="">
                        <h5><a href="">@tka.Username</a> <a href="#" class="reply"><i class="icofont-reply"></i> Reply</a></h5>
                        <time datetime="2020-01-01">@tka.CreatedOn</time>
                        <p>@tka.Comment</p>

                    </div><!-- End comment #1 -->
                }

            }
            <!--comment-box section-->
            <div class="reply-form" style="width:70%; margin-left:10%; margin-top: 5%;">
                <h4>Leave a Comment</h4>
                <form action="">
                    <div class="row">
                        <div class="col form-group">
                            <textarea name="comment" class="form-control" placeholder="Type Your Comment.." @bind=@tkaposts.Comment></textarea>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary" @onclick="() => CreateComment()">Post Comment</button>

                </form>

            </div>
            <!--End of comment-box section-->
        </div>
        <button type="button" class="btn btn-danger" @onclick="() => cancel()" style="margin-left:10%;">Back</button>
    </div>
</section>


@code {

    [Parameter]
    public string PostId { get; set; }

    TKAPosts postEntity = new TKAPosts();

    protected override async Task OnInitializedAsync()
    {
        postEntity = await postService.GetPostById(Convert.ToInt32(PostId));
        commentModel = await postService.ListAllComments(Convert.ToInt32(PostId));
    }

    /*for retrieving comments*/
    List<TKAComments> commentModel;
    TKAComments commentEntity = new TKAComments();


    TKAComments tkaposts = new TKAComments();

    protected async Task CreateComment()
    {
        await postService.CreateComment(tkaposts, postEntity);
        navigationManager.NavigateTo("/postlist");
    }



    void cancel()
    {
        navigationManager.NavigateTo("/postlist");
    }
}
